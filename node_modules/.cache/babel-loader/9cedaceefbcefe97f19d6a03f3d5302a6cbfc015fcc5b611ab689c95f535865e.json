{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\\\u043A\\u0443\\u0440\\u0441\\u044B\\\\react\\\\homework-with-router\\\\src\\\\homework-2.2\\\\phonebook.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n    this.handleInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        value,\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  render() {\n    const {\n      contacts,\n      addContact\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.name_form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: addContact,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nContactForm.defaultProps = {\n  contacts: []\n};\nclass Filter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      filter: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\nclass ContactList extends Component {\n  render() {\n    const {\n      contacts\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contact.name, \": \", contact.number]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n}\nContactList.defaultProps = {\n  contacts: []\n};\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: \"id-1\",\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\"\n      }, {\n        id: \"id-2\",\n        name: \"Hermione Kline\",\n        number: \"443-89-12\"\n      }, {\n        id: \"id-3\",\n        name: \"Eden Clements\",\n        number: \"645-17-79\"\n      }, {\n        id: \"id-4\",\n        name: \"Annie Copeland\",\n        number: \"227-91-26\"\n      }],\n      filter: \"\"\n    };\n    this.addContact = (evt, _ref2) => {\n      let {\n        contacts\n      } = _ref2;\n      this.setState({\n        contacts\n      });\n    };\n    this.submitButtonClick = (evt, state) => {\n      evt.preventDefault();\n      const {\n        contacts\n      } = this.state;\n      const {\n        name,\n        number\n      } = state;\n      if (number === \"\" || name === \"\") return;\n      if (contacts.filter(test => test.name !== name).length < contacts.length) return;\n      contacts.push({\n        name: `${name}`,\n        number: number,\n        id: nanoid()\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.state.contacts,\n        addContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: this.state.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","Component","styles","nanoid","ContactForm","state","name","number","handleInputChange","target","value","setState","render","contacts","addContact","props","name_form","defaultProps","Filter","filter","ContactList","map","contact","id","App","evt","submitButtonClick","preventDefault","test","length","push"],"sources":["C:/study/курсы/react/homework-with-router/src/homework-2.2/phonebook.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n  }\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const {contacts, addContact} = this.props;\r\n    return (\r\n      <>\r\n        <form className={styles.name_form}>\r\n          <label>Name</label>\r\n          <br></br>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br></br>\r\n          <label>Number</label>\r\n          <br></br>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n        <button type=\"submit\" onClick={addContact}>\r\n          Add contact\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    filter: \"\",\r\n  };\r\n  render() {\r\n    return <></>;\r\n  }\r\n}\r\n\r\nclass ContactList extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n  }\r\n\r\n  render() {\r\n    const {contacts} = this.props;\r\n    return (\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = (evt, {contacts}) => {\r\n    this.setState({contacts});\r\n  }\r\n  submitButtonClick = (evt, state) => {\r\n    evt.preventDefault();\r\n    const {contacts} = this.state;\r\n    const { name, number } = state;\r\n\r\n    if (number === \"\" || name === \"\") return;\r\n    if (contacts.filter((test) => test.name !== name).length < contacts.length)\r\n      return;\r\n\r\n    contacts.push({ name: `${name}`, number: number, id: nanoid() });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm contacts={this.state.contacts} addContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList contacts={this.state.contacts} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}