{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\\\u043A\\u0443\\u0440\\u0441\\u044B\\\\react\\\\homework-with-router\\\\src\\\\homework-2.2\\\\phonebook.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { nanoid } from \"nanoid\";\nimport { eventWrapper } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n    this.handleInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        value,\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.submitButtonClick = evt => {\n      evt.preventDefault();\n      const {\n        contacts,\n        addContact\n      } = this.props;\n      const {\n        name,\n        number\n      } = this.state;\n      if (number === \"\" || name === \"\") return;\n      if (contacts.filter(test => test.name !== name).length < contacts.length) return;\n      contacts.push({\n        name: `${name}`,\n        number: number,\n        id: nanoid()\n      });\n      addContact({\n        contacts\n      });\n    };\n  }\n  render() {\n    const {\n      contacts,\n      addContact\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.name_form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.submitButtonClick,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass Filter extends Component {\n  constructor() {\n    super(...arguments);\n    this.filter = _ref2 => {\n      let {\n        target\n      } = _ref2;\n      const {\n        changeFilterState\n      } = this.props;\n      const {\n        value\n      } = target;\n      changeFilterState(value);\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"filter\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        onChange: this.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nclass ContactList extends Component {\n  render() {\n    const {\n      contacts\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n}\nContactList.defaultProps = {\n  contacts: []\n};\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: \"id-1\",\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\"\n      }, {\n        id: \"id-2\",\n        name: \"Hermione Kline\",\n        number: \"443-89-12\"\n      }, {\n        id: \"id-3\",\n        name: \"Eden Clements\",\n        number: \"645-17-79\"\n      }, {\n        id: \"id-4\",\n        name: \"Annie Copeland\",\n        number: \"227-91-26\"\n      }],\n      filter: \"\"\n    };\n    this.setContactsState = _ref3 => {\n      let {\n        contacts\n      } = _ref3;\n      this.setState({\n        contacts\n      });\n    };\n    this.setFilterState = filter => {\n      this.setState({\n        filter\n      });\n    };\n    this.getFilteredContacts = () => {\n      const contacts = [...this.state.contacts];\n      const filteredContacts = contacts.filter(contact => contact.name.includes(this.state.filter));\n      console.log(filteredContacts);\n      return filteredContacts;\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.state.contacts,\n        addContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        changeFilterState: this.setFilterState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: this.getFilteredContacts,\n        filteredContacts: this.getFilteredContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","Component","styles","nanoid","eventWrapper","ContactForm","state","name","number","handleInputChange","target","value","setState","submitButtonClick","evt","preventDefault","contacts","addContact","props","filter","test","length","push","id","render","name_form","Filter","changeFilterState","ContactList","defaultProps","App","setContactsState","setFilterState","getFilteredContacts","filteredContacts","contact","includes","console","log"],"sources":["C:/study/курсы/react/homework-with-router/src/homework-2.2/phonebook.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { eventWrapper } from \"@testing-library/user-event/dist/utils\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitButtonClick = (evt) => {\r\n    evt.preventDefault();\r\n    const { contacts, addContact } = this.props;\r\n    const { name, number } = this.state;\r\n\r\n    if (number === \"\" || name === \"\") return;\r\n    if (contacts.filter((test) => test.name !== name).length < contacts.length)\r\n      return;\r\n\r\n    contacts.push({ name: `${name}`, number: number, id: nanoid() });\r\n    addContact({ contacts });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, addContact } = this.props;\r\n    return (\r\n      <>\r\n        <form className={styles.name_form}>\r\n          <label>Name</label>\r\n          <br></br>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br></br>\r\n          <label>Number</label>\r\n          <br></br>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n        <button type=\"submit\" onClick={this.submitButtonClick}>\r\n          Add contact\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Filter extends Component {\r\n  filter = ({ target }) => {\r\n    const { changeFilterState } = this.props;\r\n    const { value } = target;\r\n    changeFilterState(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"filter\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={this.filter}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass ContactList extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <ul>\r\n      <li>test</li>\r\n        {/* {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n          </li>\r\n        ))} */}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  setContactsState = ({ contacts }) => {\r\n    this.setState({ contacts });\r\n  };\r\n\r\n  setFilterState = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const contacts = [...this.state.contacts];\r\n    const filteredContacts = contacts.filter((contact) =>\r\n      contact.name.includes(this.state.filter)\r\n    );\r\n    console.log(filteredContacts);\r\n    return filteredContacts;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          contacts={this.state.contacts}\r\n          addContact={this.addContact}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter changeFilterState={this.setFilterState} />\r\n        <ContactList contacts={this.getFilteredContacts} filteredContacts={this.getFilteredContacts} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}