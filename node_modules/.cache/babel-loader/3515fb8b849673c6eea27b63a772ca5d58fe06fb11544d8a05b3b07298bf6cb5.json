{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { setContact, deleteContact, filterContacts } from \"./contactsActions\";\nimport { initialState } from \"./phonebook\";\nconst contactsReducer = createReducer({\n  contacts: {\n    items: [],\n    filter: \"\"\n  }\n}, builder => {\n  builder.addCase(setContact, (state, action) => {\n    console.log({\n      ...state,\n      contacts: {\n        ...contacts,\n        items: state.contacts.items.concat(action.payload)\n      }\n    });\n    return {\n      ...state,\n      items: state.contacts.items.concat(action.payload)\n    };\n    //console.log(state.contacts);\n  }).addCase(deleteContact, (state, action) => state.contacts.items.filter(contact => contact.id !== action.payload)).addCase(filterContacts, (state, action) => ({\n    ...state,\n    filter: action.payload\n  })).addDefaultCase((state, action) => state);\n});\nexport { contactsReducer };","map":{"version":3,"names":["createReducer","setContact","deleteContact","filterContacts","initialState","contactsReducer","contacts","items","filter","builder","addCase","state","action","console","log","concat","payload","contact","id","addDefaultCase"],"sources":["C:/study/курсы/react/homework-with-router/src/homework-6/contactsReducer.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { setContact, deleteContact, filterContacts } from \"./contactsActions\";\r\nimport { initialState } from \"./phonebook\";\r\n\r\nconst contactsReducer = createReducer(\r\n  {\r\n    contacts: {\r\n      items: [],\r\n      filter: \"\",\r\n    },\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(setContact, (state, action) => {\r\n        console.log({...state, contacts: {...contacts, items: state.contacts.items.concat(action.payload)}});\r\n        return {...state, items: state.contacts.items.concat(action.payload)}\r\n        //console.log(state.contacts);\r\n      }\r\n      )\r\n      .addCase(deleteContact, (state, action) =>\r\n        state.contacts.items.filter((contact) => contact.id !== action.payload)\r\n      )\r\n      .addCase(\r\n        filterContacts,\r\n        (state, action) =>  ({...state, filter: action.payload})\r\n      )\r\n      .addDefaultCase((state, action) => state);\r\n  }\r\n);\r\n\r\nexport { contactsReducer };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,UAAU,EAAEC,aAAa,EAAEC,cAAc,QAAQ,mBAAmB;AAC7E,SAASC,YAAY,QAAQ,aAAa;AAE1C,MAAMC,eAAe,GAAGL,aAAa,CACnC;EACEM,QAAQ,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV;AACF,CAAC,EACAC,OAAO,IAAK;EACXA,OAAO,CACJC,OAAO,CAACT,UAAU,EAAE,CAACU,KAAK,EAAEC,MAAM,KAAK;IACtCC,OAAO,CAACC,GAAG,CAAC;MAAC,GAAGH,KAAK;MAAEL,QAAQ,EAAE;QAAC,GAAGA,QAAQ;QAAEC,KAAK,EAAEI,KAAK,CAACL,QAAQ,CAACC,KAAK,CAACQ,MAAM,CAACH,MAAM,CAACI,OAAO;MAAC;IAAC,CAAC,CAAC;IACpG,OAAO;MAAC,GAAGL,KAAK;MAAEJ,KAAK,EAAEI,KAAK,CAACL,QAAQ,CAACC,KAAK,CAACQ,MAAM,CAACH,MAAM,CAACI,OAAO;IAAC,CAAC;IACrE;EACF,CAAC,CACA,CACAN,OAAO,CAACR,aAAa,EAAE,CAACS,KAAK,EAAEC,MAAM,KACpCD,KAAK,CAACL,QAAQ,CAACC,KAAK,CAACC,MAAM,CAAES,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACI,OAAO,CAAC,CACxE,CACAN,OAAO,CACNP,cAAc,EACd,CAACQ,KAAK,EAAEC,MAAM,MAAO;IAAC,GAAGD,KAAK;IAAEH,MAAM,EAAEI,MAAM,CAACI;EAAO,CAAC,CAAC,CACzD,CACAG,cAAc,CAAC,CAACR,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAAC;AAC7C,CAAC,CACF;AAED,SAASN,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}